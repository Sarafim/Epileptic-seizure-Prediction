import svm_model as svm_mlimport preprocessing as ppimport matplotlib.pyplot as pltimport pandas as pdimport load as limport numpy as nppatient=['boyko-18']kernel ='rbf'sel_max = 4sel_min = 2start_time = 300step_time = 60features=dict()features['length']= Truefeatures['meanNN']= Truefeatures['SDNN']= Truefeatures['RMSSD']= Truefeatures['variance']= Truefeatures['NN50']= Truefeatures['FDF']= Truepercent = 0.5predict_mode = 0pp.new_features( patient[0], start_time, step_time,features)clf = svm_ml.train_model(patient,kernel)svm_ml.test_model(clf,patient,sel_max,sel_min,percent,predict_mode)svm_ml.plot_2model(clf,patient,sel_min,sel_max,start_time,step_time,percent,predict_mode)# Y = svm_ml.prepare_to_model('D:/Diploma/Signals/Features/f_' + patient + '.csv')# dist_to_border = clf.decision_function(Y).ravel()## chance = svm_ml.probability_count(dist_to_border)# patient = pd.read_csv('D:/Diploma/Signals/Features/f_' + patient + '.csv', header=0)# seizureStart = l.load_column(path='D:/Diploma/Signals/Ready_Signals/' + patient + '.csv', data_type = 'seizureStart')# seizureEnd = l.load_column(path='D:/Diploma/Signals/Ready_Signals/' + patient + '.csv', data_type = 'seizureEnd')## fig = plt.figure()# ax1 = fig.add_subplot(312)# ax2 = fig.add_subplot(313)# ax3 = fig.add_subplot(311)## ax1.xaxis.set_ticks(np.arange(0, max(patient['0:f_time'])+50, 500))## ax1.plot(patient['0:f_time'],abs(dist_to_border))# ax1.plot(seizureStart['seizureStart'],np.zeros(len(seizureStart['seizureStart'])),marker='o',linestyle=' ', color = 'r' )# ax1.title.set_text('dist_to_border '+ str(start_time)+':' + str(step_time))# ax1.grid(True)## ax2.plot(patient['0:f_time'],dist_to_border)# ax2.title.set_text('chance')# ax2.plot(seizureStart['seizureStart'], np.zeros(len(seizureStart['seizureStart'])), marker='o', linestyle=' ',color='r')# ax2.grid(True)## RR_pos = l.load_column(path='D:/Diploma/Signals/Ready_Signals/' + patient + '.csv',data_type='RR_pos')# RR_raw = l.load_column(path='D:/Diploma/Signals/Ready_Signals/' + patient + '.csv', data_type='RR_raw')# ax3.plot(RR_pos['RR_pos'],RR_raw['RR_raw'])# ax3.plot(seizureStart['seizureStart'], np.zeros(len(seizureStart['seizureStart'])), marker='o',linestyle=' ', color='r')# ax3.grid(True)# fig.set_size_inches(22, 10.5)# fig.savefig('D:/Diploma/Test_graph/'+str(start_time)+'_' + str(step_time)+'.png')  # save the figure to file# plt.close(fig)# svm_ml.plot_graph(patient_patient, patient_patient, outlier_fraction, clf, sel_max, sel_min, threshold,start_time,step_time)